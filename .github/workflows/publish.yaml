name: Publish to PyPI
on:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is needed to push changes back to the repository
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Get full history for version tracking
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.5.1'
          virtualenvs-create: true
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Update version and commit
        run: |
          # Get current version
          CURRENT_VERSION=$(poetry version -s)
          echo "Current version: $CURRENT_VERSION"
          
          # Bump patch version
          poetry version patch
          NEW_VERSION=$(poetry version -s)
          echo "New version: $NEW_VERSION"
          
          # Commit the version change
          git add pyproject.toml
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git tag v$NEW_VERSION
      
      - name: Build and publish
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi "$PYPI_API_TOKEN"
          poetry build
          poetry publish --username __token__ --password "$PYPI_API_TOKEN"
      
      - name: Push changes to GitHub
        run: |
          git push origin HEAD:main
          git push origin v$(poetry version -s)